// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String   @id @default(cuid())
  name      String?
  surname   String?
  email     String?  @unique
  password  String?
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  profile   Profile? @relation(fields: [profileId], references: [id])
  profileId String?
  Company   Company? @relation(fields: [companyId], references: [id])
  companyId String? // ID da empresa

  @@map(name: "users")
}

model Profile {
  id          String   @id @default(cuid())
  bio         String?
  name        String?
  surname     String?
  email       String?
  contact     String[]
  address     String[]
  dateofbirth String?
  gender      String?
  image       String?
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @updatedAt @map(name: "updated_at")
  User        User[]
}

model Company {
  id        String   @id @default(cuid())
  name      String
  contact   String[]
  address   String[]
  document  String
  type      String
  image     String?
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  users     User[] // Relacionamento com usu√°rios
}
